const pg = require('pg');

exports.get = (script,connectionString,res) => {
    const results = [];
    pg.connect(connectionString, (err, client, done) => {
      // Handle connection errors
      if(err) {
        done();
        console.log(err);
        return err;
      }
      // SQL Query > Select Data
      const query = client.query(script);
      // Stream results back one row at a time
      query.on('row', (row) => {
        results.push(row);
      });
      // After all data is returned, close connection and return results
      query.on('end', () => {
        done();
        return res(results);
      });

      query.on('error', (row) => {
        debugger;
        console.log(script + ' : error : ' + row)
        return res('error');
      });
    });
}

// exports.get = (dbname,script,connectionString,res) => {
//     const results = [];
//     var connectionString = connectionString;
//     //debugger;
//     connectionString.database = dbname;
//     pg.connect(connectionString, (err, client, done) => {
//       // Handle connection errors
//       if(err) {
//         done();
//         console.log(err);
//         return res(err);
//       }
//       // SQL Query > Select Data
//       const query = client.query(script);
//       // Stream results back one row at a time
//       query.on('row', (row) => {
//         results.push(row);
//       });
//       // After all data is returned, close connection and return results
//       query.on('end', () => {
//         done();
//         return res(results);
//       });

//       query.on('error', (row) => {
//         debugger;
//         console.log(script + ' : error : ' + row)
//         return res('error');
//       });
//     });
// }

exports.excute = (dbname,script,connectionString,res) => {
    const results = [];
    var connectionString = connectionString;
    //debugger;
    connectionString.database = dbname;
    pg.connect(connectionString, (err, client, done) => {
      // Handle connection errors
      if(err) {
        done();
        console.log(err);
        return res.status(500).json({success: false, data: err});
      }
      
      //debugger;
      client.query(script,(err,result) => {
        done();

        if (err)
        {
          if (err.code != 23505)
          {
             console.log(script + ' : error code : ' + err.code + ' err.message : ' + err.message)

             if (err.message.indexOf('does not exist') > 0)
             {
                return res('exist');
             }else
             {
                return res('error');
             }
            
          }
          else { return res('ok'); }
         
        }else
        {
          return res('ok');
        }
      })

    });
}

exports.upsert = (dbname,insert,update,connectionString,res) => 
{
    var arr = [];
    var script = '';
    var temp = '';
//debugger;
    try
    {
      arr = insert.split('VALUES')
      temp = arr[1].replace(/^\s+|\s+$/g, '');
      arr[1] = temp.substring(1, temp.length - 1);
      insert = arr[0] + " SELECT " + arr[1];

      var script = " WITH upsert AS (" + update + "  RETURNING *)";
      script += " " + insert + " ";
      script += " WHERE NOT EXISTS (SELECT * FROM upsert)";

      this.excute(dbname,script,connectionString,function(r) 
      {
          //debugger;
          res(r);
          return;
      })
      
    }catch(ex)
    {
      console.log('setUpsertScript : ' + ex)
      res(ex);
      return;
    }

};